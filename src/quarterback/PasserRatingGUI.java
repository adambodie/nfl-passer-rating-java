package quarterback;


import java.awt.Color;
import java.awt.Component;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Adam Bodie
 */
public class PasserRatingGUI extends javax.swing.JFrame {
    private static Component JFrame;

    /**
     * Creates new form PasserRatingGUI
     */
    public PasserRatingGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backgroundPanel = new javax.swing.JPanel();
        playerTextField = new javax.swing.JTextField();
        completionTextField = new javax.swing.JTextField();
        attemptTextField = new javax.swing.JTextField();
        yardTextField = new javax.swing.JTextField();
        touchdownTextField = new javax.swing.JTextField();
        interceptionTextField = new javax.swing.JTextField();
        playerLabel = new javax.swing.JLabel();
        teamLabel = new javax.swing.JLabel();
        completionLabel = new javax.swing.JLabel();
        attemptLabel = new javax.swing.JLabel();
        yardLabel = new javax.swing.JLabel();
        touchdownLabel = new javax.swing.JLabel();
        passerRatingLabel = new javax.swing.JLabel();
        interceptionLabel = new javax.swing.JLabel();
        convertButton = new javax.swing.JButton();
        teamComboBox = new javax.swing.JComboBox();
        passerRatingFormattedTextField = new javax.swing.JFormattedTextField();
        textField = new javax.swing.JLabel();
        pictureLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("NFL Passer Rating");

        playerLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        playerLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        playerLabel.setText("Player");

        teamLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        teamLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        teamLabel.setText("Team");

        completionLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        completionLabel.setText("Completions");

        attemptLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        attemptLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        attemptLabel.setText("Attempts");

        yardLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        yardLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        yardLabel.setText("Yards");

        touchdownLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        touchdownLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        touchdownLabel.setText("Touchdowns");

        passerRatingLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        passerRatingLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        passerRatingLabel.setText("Passer Rating");

        interceptionLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        interceptionLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        interceptionLabel.setText("Interceptions");

        convertButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        convertButton.setText("Convert");
        convertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertButtonActionPerformed(evt);
            }
        });

        teamComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] {"NFL Team", az.getName(), atl.getName(), bal.getName(), buf.getName(), car.getName(), chi.getName(), cin.getName(), cle.getName(),
            dal.getName(), den.getName(), det.getName(), gb.getName(), hou.getName(), ind.getName(), jax.getName(), kc.getName(),
            mia.getName(), min.getName(), ne.getName(), no.getName(), nyg.getName(), nyj.getName(), oak.getName(), phi.getName(),
            pit.getName(), sd.getName(), sf.getName(), sea.getName(), stl.getName(), tb.getName(), ten.getName(), was.getName() }));
teamComboBox.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        teamComboBoxActionPerformed(evt);
    }
    });

    textField.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
    textField.setText("NFL Passer Rating");

    javax.swing.GroupLayout backgroundPanelLayout = new javax.swing.GroupLayout(backgroundPanel);
    backgroundPanel.setLayout(backgroundPanelLayout);
    backgroundPanelLayout.setHorizontalGroup(
        backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(backgroundPanelLayout.createSequentialGroup()
            .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(backgroundPanelLayout.createSequentialGroup()
                    .addGap(31, 31, 31)
                    .addComponent(pictureLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(backgroundPanelLayout.createSequentialGroup()
                    .addGap(61, 61, 61)
                    .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, backgroundPanelLayout.createSequentialGroup()
                            .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(backgroundPanelLayout.createSequentialGroup()
                                    .addComponent(completionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(30, 30, 30)
                                    .addComponent(attemptTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(playerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(backgroundPanelLayout.createSequentialGroup()
                                    .addComponent(completionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(attemptLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(151, 151, 151)
                            .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(backgroundPanelLayout.createSequentialGroup()
                                    .addComponent(touchdownTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(30, 30, 30)
                                    .addComponent(interceptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(teamLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(backgroundPanelLayout.createSequentialGroup()
                                    .addComponent(touchdownLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(interceptionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(backgroundPanelLayout.createSequentialGroup()
                            .addComponent(playerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(151, 151, 151)
                            .addComponent(teamComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(backgroundPanelLayout.createSequentialGroup()
                    .addGap(278, 278, 278)
                    .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(yardTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(yardLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(passerRatingFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(convertButton))
                        .addGroup(backgroundPanelLayout.createSequentialGroup()
                            .addGap(1, 1, 1)
                            .addComponent(passerRatingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(backgroundPanelLayout.createSequentialGroup()
                    .addGap(207, 207, 207)
                    .addComponent(textField)))
            .addGap(65, 65, 65))
    );
    backgroundPanelLayout.setVerticalGroup(
        backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(backgroundPanelLayout.createSequentialGroup()
            .addGap(36, 36, 36)
            .addComponent(textField)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(pictureLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(teamComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(playerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(teamLabel)
                .addComponent(playerLabel))
            .addGap(32, 32, 32)
            .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(completionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(attemptTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(yardTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(touchdownTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(interceptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(backgroundPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(completionLabel)
                .addComponent(attemptLabel)
                .addComponent(yardLabel)
                .addComponent(interceptionLabel)
                .addComponent(touchdownLabel))
            .addGap(31, 31, 31)
            .addComponent(convertButton)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(passerRatingFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(passerRatingLabel)
            .addGap(84, 84, 84))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(backgroundPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(backgroundPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    getAccessibleContext().setAccessibleDescription("");

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void convertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertButtonActionPerformed
        double completionText = Double.parseDouble(completionTextField.getText());
        double attemptText = Double.parseDouble(attemptTextField.getText());
        double yardText = Double.parseDouble(yardTextField.getText());
        double touchdownText = Double.parseDouble(touchdownTextField.getText());
        double interceptionText = Double.parseDouble(interceptionTextField.getText());
        double A = ((completionText / attemptText) - .3) * 5;
       
			if (A < 0) {
				A = 0;
			} else if (A > 2.375) {
				A = 2.375;
			} else
				A = ((completionText / attemptText) - .3) * 5;
			double B = ((yardText / attemptText) - 3) * 0.25;
			if (B < 0) {
				B = 0;
			} else if (B > 2.375) {
				B = 2.375;
			} else
				B = ((yardText / attemptText) - 3) * 0.25;
			double C = (touchdownText / attemptText) * 20;
			if (C < 0) {
				C = 0;
			} else if (C > 2.375) {
				C = 2.375;
			} else
				C = (touchdownText / attemptText) * 20;
			double D = 2.375 - ((interceptionText / attemptText) * 25);
			if (D < 0) {
				D = 0;
			} else if (D > 2.375) {
				D = 2.375;
			} else
				D = 2.375 - ((interceptionText / attemptText) * 25);
			double E = ((A + B + C + D) / 6) * 100;
                        
                       passerRatingFormattedTextField.setValue(E);
                       passerRatingFormattedTextField.setEditable(false);
                       passerRatingFormattedTextField.setForeground(Color.red);
                       passerRatingFormattedTextField.setHorizontalAlignment(JTextField.CENTER);
                             
    }//GEN-LAST:event_convertButtonActionPerformed
    

    private void teamComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teamComboBoxActionPerformed
        JComboBox cb = (JComboBox)evt.getSource();
        String teamName = (String)cb.getSelectedItem();
        pictureLabel.setIcon(createImageIcon(teamName
                                        + ".gif"));
        
        if (teamName.equals(az.getName())) {
            backgroundPanel.setBackground(az.getColor());
            teamLabel.setForeground(az.getTextColor());
            playerLabel.setForeground(az.getTextColor());
            completionLabel.setForeground(az.getTextColor());
            attemptLabel.setForeground(az.getTextColor());
            yardLabel.setForeground(az.getTextColor());
            touchdownLabel.setForeground(az.getTextColor());
            interceptionLabel.setForeground(az.getTextColor());
            passerRatingLabel.setForeground(az.getTextColor());            
            playerLabel.setForeground(az.getTextColor());
            textField.setForeground(az.getTextColor());            
        } else if (teamName.equals(atl.getName())) {
            backgroundPanel.setBackground(atl.getColor());
            teamLabel.setForeground(atl.getTextColor());
            playerLabel.setForeground(atl.getTextColor());
            completionLabel.setForeground(atl.getTextColor());
            attemptLabel.setForeground(atl.getTextColor());
            yardLabel.setForeground(atl.getTextColor());
            touchdownLabel.setForeground(atl.getTextColor());
            interceptionLabel.setForeground(atl.getTextColor());
            passerRatingLabel.setForeground(atl.getTextColor());            
            playerLabel.setForeground(atl.getTextColor());
            textField.setForeground(atl.getTextColor());
         } else if (teamName.equals(bal.getName())) {
            backgroundPanel.setBackground(bal.getColor());
            teamLabel.setForeground(bal.getTextColor());
            playerLabel.setForeground(bal.getTextColor());
            completionLabel.setForeground(bal.getTextColor());
            attemptLabel.setForeground(bal.getTextColor());
            yardLabel.setForeground(bal.getTextColor());
            touchdownLabel.setForeground(bal.getTextColor());
            interceptionLabel.setForeground(bal.getTextColor());
            passerRatingLabel.setForeground(bal.getTextColor());            
            playerLabel.setForeground(bal.getTextColor());
            textField.setForeground(bal.getTextColor());
           } else if (teamName.equals(buf.getName())) {
            backgroundPanel.setBackground(buf.getColor());
            teamLabel.setForeground(buf.getTextColor());
            playerLabel.setForeground(buf.getTextColor());
            completionLabel.setForeground(buf.getTextColor());
            attemptLabel.setForeground(buf.getTextColor());
            yardLabel.setForeground(buf.getTextColor());
            touchdownLabel.setForeground(buf.getTextColor());
            interceptionLabel.setForeground(buf.getTextColor());
            passerRatingLabel.setForeground(buf.getTextColor());            
            playerLabel.setForeground(buf.getTextColor());
            textField.setForeground(buf.getTextColor());
         } else if (teamName.equals(car.getName())) {
            backgroundPanel.setBackground(car.getColor());
            teamLabel.setForeground(car.getTextColor());
            playerLabel.setForeground(car.getTextColor());
            completionLabel.setForeground(car.getTextColor());
            attemptLabel.setForeground(car.getTextColor());
            yardLabel.setForeground(car.getTextColor());
            touchdownLabel.setForeground(car.getTextColor());
            interceptionLabel.setForeground(car.getTextColor());
            passerRatingLabel.setForeground(car.getTextColor());            
            playerLabel.setForeground(car.getTextColor());
            textField.setForeground(car.getTextColor());
        } else if (teamName.equals(chi.getName())) {
            backgroundPanel.setBackground(chi.getColor());
            teamLabel.setForeground(chi.getTextColor());
            playerLabel.setForeground(chi.getTextColor());
            completionLabel.setForeground(chi.getTextColor());
            attemptLabel.setForeground(chi.getTextColor());
            yardLabel.setForeground(chi.getTextColor());
            touchdownLabel.setForeground(chi.getTextColor());
            interceptionLabel.setForeground(chi.getTextColor());
            passerRatingLabel.setForeground(chi.getTextColor());            
            playerLabel.setForeground(chi.getTextColor());
            textField.setForeground(chi.getTextColor());
           } else if (teamName.equals(cin.getName())) {
            backgroundPanel.setBackground(cin.getColor());
            teamLabel.setForeground(cin.getTextColor());
            playerLabel.setForeground(cin.getTextColor());
            completionLabel.setForeground(cin.getTextColor());
            attemptLabel.setForeground(cin.getTextColor());
            yardLabel.setForeground(cin.getTextColor());
            touchdownLabel.setForeground(cin.getTextColor());
            interceptionLabel.setForeground(cin.getTextColor());
            passerRatingLabel.setForeground(cin.getTextColor());            
            playerLabel.setForeground(cin.getTextColor());
            textField.setForeground(cin.getTextColor());
         } else if (teamName.equals(cle.getName())) {
            backgroundPanel.setBackground(cle.getColor());
            teamLabel.setForeground(cle.getTextColor());
            playerLabel.setForeground(cle.getTextColor());
            completionLabel.setForeground(cle.getTextColor());
            attemptLabel.setForeground(cle.getTextColor());
            yardLabel.setForeground(cle.getTextColor());
            touchdownLabel.setForeground(cle.getTextColor());
            interceptionLabel.setForeground(cle.getTextColor());
            passerRatingLabel.setForeground(cle.getTextColor());            
            playerLabel.setForeground(cle.getTextColor());
            textField.setForeground(cle.getTextColor());
           } else if (teamName.equals(dal.getName())) {
            backgroundPanel.setBackground(dal.getColor());
            teamLabel.setForeground(dal.getTextColor());
            playerLabel.setForeground(dal.getTextColor());
            completionLabel.setForeground(dal.getTextColor());
            attemptLabel.setForeground(dal.getTextColor());
            yardLabel.setForeground(dal.getTextColor());
            touchdownLabel.setForeground(dal.getTextColor());
            interceptionLabel.setForeground(dal.getTextColor());
            passerRatingLabel.setForeground(dal.getTextColor());            
            playerLabel.setForeground(dal.getTextColor());
            textField.setForeground(dal.getTextColor());
         } else if (teamName.equals(den.getName())) {
            backgroundPanel.setBackground(den.getColor());
            teamLabel.setForeground(den.getTextColor());
            playerLabel.setForeground(den.getTextColor());
            completionLabel.setForeground(den.getTextColor());
            attemptLabel.setForeground(den.getTextColor());
            yardLabel.setForeground(den.getTextColor());
            touchdownLabel.setForeground(den.getTextColor());
            interceptionLabel.setForeground(den.getTextColor());
            passerRatingLabel.setForeground(den.getTextColor());            
            playerLabel.setForeground(den.getTextColor());
            textField.setForeground(den.getTextColor());
           } else if (teamName.equals(det.getName())) {
            backgroundPanel.setBackground(det.getColor());
            teamLabel.setForeground(det.getTextColor());
            playerLabel.setForeground(det.getTextColor());
            completionLabel.setForeground(det.getTextColor());
            attemptLabel.setForeground(det.getTextColor());
            yardLabel.setForeground(det.getTextColor());
            touchdownLabel.setForeground(det.getTextColor());
            interceptionLabel.setForeground(det.getTextColor());
            passerRatingLabel.setForeground(det.getTextColor());            
            playerLabel.setForeground(det.getTextColor());
            textField.setForeground(det.getTextColor());
         } else if (teamName.equals(gb.getName())) {
            backgroundPanel.setBackground(gb.getColor());
            teamLabel.setForeground(gb.getTextColor());
            playerLabel.setForeground(gb.getTextColor());
            completionLabel.setForeground(gb.getTextColor());
            attemptLabel.setForeground(gb.getTextColor());
            yardLabel.setForeground(gb.getTextColor());
            touchdownLabel.setForeground(gb.getTextColor());
            interceptionLabel.setForeground(gb.getTextColor());
            passerRatingLabel.setForeground(gb.getTextColor());            
            playerLabel.setForeground(gb.getTextColor());
            textField.setForeground(gb.getTextColor());
        } else if (teamName.equals(hou.getName())) {
            backgroundPanel.setBackground(hou.getColor());
            teamLabel.setForeground(hou.getTextColor());
            playerLabel.setForeground(hou.getTextColor());
            completionLabel.setForeground(hou.getTextColor());
            attemptLabel.setForeground(hou.getTextColor());
            yardLabel.setForeground(hou.getTextColor());
            touchdownLabel.setForeground(hou.getTextColor());
            interceptionLabel.setForeground(hou.getTextColor());
            passerRatingLabel.setForeground(hou.getTextColor());            
            playerLabel.setForeground(hou.getTextColor());
            textField.setForeground(hou.getTextColor());
           } else if (teamName.equals(ind.getName())) {
            backgroundPanel.setBackground(ind.getColor());
            teamLabel.setForeground(ind.getTextColor());
            playerLabel.setForeground(ind.getTextColor());
            completionLabel.setForeground(ind.getTextColor());
            attemptLabel.setForeground(ind.getTextColor());
            yardLabel.setForeground(ind.getTextColor());
            touchdownLabel.setForeground(ind.getTextColor());
            interceptionLabel.setForeground(ind.getTextColor());
            passerRatingLabel.setForeground(ind.getTextColor());            
            playerLabel.setForeground(ind.getTextColor());
            textField.setForeground(ind.getTextColor());
         } else if (teamName.equals(jax.getName())) {
            backgroundPanel.setBackground(jax.getColor());
            teamLabel.setForeground(jax.getTextColor());
            playerLabel.setForeground(jax.getTextColor());
            completionLabel.setForeground(jax.getTextColor());
            attemptLabel.setForeground(jax.getTextColor());
            yardLabel.setForeground(jax.getTextColor());
            touchdownLabel.setForeground(jax.getTextColor());
            interceptionLabel.setForeground(jax.getTextColor());
            passerRatingLabel.setForeground(jax.getTextColor());            
            playerLabel.setForeground(jax.getTextColor());
            textField.setForeground(jax.getTextColor());
        } else if (teamName.equals(kc.getName())) {
            backgroundPanel.setBackground(kc.getColor());
            teamLabel.setForeground(kc.getTextColor());
            playerLabel.setForeground(kc.getTextColor());
            completionLabel.setForeground(kc.getTextColor());
            attemptLabel.setForeground(kc.getTextColor());
            yardLabel.setForeground(kc.getTextColor());
            touchdownLabel.setForeground(kc.getTextColor());
            interceptionLabel.setForeground(kc.getTextColor());
            passerRatingLabel.setForeground(kc.getTextColor());            
            playerLabel.setForeground(kc.getTextColor());
            textField.setForeground(kc.getTextColor());
         } else if (teamName.equals(mia.getName())) {
            backgroundPanel.setBackground(mia.getColor());
            teamLabel.setForeground(mia.getTextColor());
            playerLabel.setForeground(mia.getTextColor());
            completionLabel.setForeground(mia.getTextColor());
            attemptLabel.setForeground(mia.getTextColor());
            yardLabel.setForeground(mia.getTextColor());
            touchdownLabel.setForeground(mia.getTextColor());
            interceptionLabel.setForeground(mia.getTextColor());
            passerRatingLabel.setForeground(mia.getTextColor());            
            playerLabel.setForeground(mia.getTextColor());
            textField.setForeground(mia.getTextColor());
           } else if (teamName.equals(min.getName())) {
            backgroundPanel.setBackground(min.getColor());
            teamLabel.setForeground(min.getTextColor());
            playerLabel.setForeground(min.getTextColor());
            completionLabel.setForeground(min.getTextColor());
            attemptLabel.setForeground(min.getTextColor());
            yardLabel.setForeground(min.getTextColor());
            touchdownLabel.setForeground(min.getTextColor());
            interceptionLabel.setForeground(min.getTextColor());
            passerRatingLabel.setForeground(min.getTextColor());            
            playerLabel.setForeground(min.getTextColor());
            textField.setForeground(min.getTextColor());
         } else if (teamName.equals(ne.getName())) {
            backgroundPanel.setBackground(ne.getColor());
            teamLabel.setForeground(ne.getTextColor());
            playerLabel.setForeground(ne.getTextColor());
            completionLabel.setForeground(ne.getTextColor());
            attemptLabel.setForeground(ne.getTextColor());
            yardLabel.setForeground(ne.getTextColor());
            touchdownLabel.setForeground(ne.getTextColor());
            interceptionLabel.setForeground(ne.getTextColor());
            passerRatingLabel.setForeground(ne.getTextColor());            
            playerLabel.setForeground(ne.getTextColor());
            textField.setForeground(ne.getTextColor());
        } else if (teamName.equals(no.getName())) {
            backgroundPanel.setBackground(no.getColor());
            teamLabel.setForeground(no.getTextColor());
            playerLabel.setForeground(no.getTextColor());
            completionLabel.setForeground(no.getTextColor());
            attemptLabel.setForeground(no.getTextColor());
            yardLabel.setForeground(no.getTextColor());
            touchdownLabel.setForeground(no.getTextColor());
            interceptionLabel.setForeground(no.getTextColor());
            passerRatingLabel.setForeground(no.getTextColor());            
            playerLabel.setForeground(no.getTextColor());
            textField.setForeground(no.getTextColor());
           } else if (teamName.equals(nyg.getName())) {
            backgroundPanel.setBackground(nyg.getColor());
            teamLabel.setForeground(nyg.getTextColor());
            playerLabel.setForeground(nyg.getTextColor());
            completionLabel.setForeground(nyg.getTextColor());
            attemptLabel.setForeground(nyg.getTextColor());
            yardLabel.setForeground(nyg.getTextColor());
            touchdownLabel.setForeground(nyg.getTextColor());
            interceptionLabel.setForeground(nyg.getTextColor());
            passerRatingLabel.setForeground(nyg.getTextColor());            
            playerLabel.setForeground(nyg.getTextColor());
            textField.setForeground(nyg.getTextColor());
         } else if (teamName.equals(nyj.getName())) {
            backgroundPanel.setBackground(nyj.getColor());
            teamLabel.setForeground(nyj.getTextColor());
            playerLabel.setForeground(nyj.getTextColor());
            completionLabel.setForeground(nyj.getTextColor());
            attemptLabel.setForeground(nyj.getTextColor());
            yardLabel.setForeground(nyj.getTextColor());
            touchdownLabel.setForeground(nyj.getTextColor());
            interceptionLabel.setForeground(nyj.getTextColor());
            passerRatingLabel.setForeground(nyj.getTextColor());            
            playerLabel.setForeground(nyj.getTextColor());
            textField.setForeground(nyj.getTextColor());
           } else if (teamName.equals(oak.getName())) {
            backgroundPanel.setBackground(oak.getColor());
            teamLabel.setForeground(oak.getTextColor());
            completionLabel.setForeground(oak.getTextColor());
            attemptLabel.setForeground(oak.getTextColor());
            yardLabel.setForeground(oak.getTextColor());
            touchdownLabel.setForeground(oak.getTextColor());
            interceptionLabel.setForeground(oak.getTextColor());
            passerRatingLabel.setForeground(oak.getTextColor());            
            playerLabel.setForeground(oak.getTextColor());
            textField.setForeground(oak.getTextColor());
         } else if (teamName.equals(oak.getName())) {
            backgroundPanel.setBackground(phi.getColor());
            teamLabel.setForeground(phi.getTextColor());
            playerLabel.setForeground(phi.getTextColor());
            completionLabel.setForeground(phi.getTextColor());
            attemptLabel.setForeground(phi.getTextColor());
            yardLabel.setForeground(phi.getTextColor());
            touchdownLabel.setForeground(phi.getTextColor());
            interceptionLabel.setForeground(phi.getTextColor());
            passerRatingLabel.setForeground(phi.getTextColor());            
            playerLabel.setForeground(phi.getTextColor());
            textField.setForeground(phi.getTextColor());
           } else if (teamName.equals(pit.getName())) {
            backgroundPanel.setBackground(pit.getColor());
            teamLabel.setForeground(pit.getTextColor());
            playerLabel.setForeground(pit.getTextColor());
            completionLabel.setForeground(pit.getTextColor());
            attemptLabel.setForeground(pit.getTextColor());
            yardLabel.setForeground(pit.getTextColor());
            touchdownLabel.setForeground(pit.getTextColor());
            interceptionLabel.setForeground(pit.getTextColor());
            passerRatingLabel.setForeground(pit.getTextColor());            
            playerLabel.setForeground(pit.getTextColor());
            textField.setForeground(pit.getTextColor());
         } else if (teamName.equals(sd.getName())) {
            backgroundPanel.setBackground(sd.getColor());
            teamLabel.setForeground(sd.getTextColor());
            playerLabel.setForeground(sd.getTextColor());
            completionLabel.setForeground(sd.getTextColor());
            attemptLabel.setForeground(sd.getTextColor());
            yardLabel.setForeground(sd.getTextColor());
            touchdownLabel.setForeground(sd.getTextColor());
            interceptionLabel.setForeground(sd.getTextColor());
            passerRatingLabel.setForeground(sd.getTextColor());            
            playerLabel.setForeground(sd.getTextColor());
            textField.setForeground(sd.getTextColor());
        } else if (teamName.equals(sf.getName())) {
            backgroundPanel.setBackground(sf.getColor());
            teamLabel.setForeground(sf.getTextColor());
            playerLabel.setForeground(sf.getTextColor());
            completionLabel.setForeground(sf.getTextColor());
            attemptLabel.setForeground(sf.getTextColor());
            yardLabel.setForeground(sf.getTextColor());
            touchdownLabel.setForeground(sf.getTextColor());
            interceptionLabel.setForeground(sf.getTextColor());
            passerRatingLabel.setForeground(sf.getTextColor());            
            playerLabel.setForeground(sf.getTextColor());
            textField.setForeground(sf.getTextColor());
           } else if (teamName.equals(sea.getName())) {
            backgroundPanel.setBackground(sea.getColor());
            teamLabel.setForeground(sea.getTextColor());
            playerLabel.setForeground(sea.getTextColor());
            completionLabel.setForeground(sea.getTextColor());
            attemptLabel.setForeground(sea.getTextColor());
            yardLabel.setForeground(sea.getTextColor());
            touchdownLabel.setForeground(sea.getTextColor());
            interceptionLabel.setForeground(sea.getTextColor());
            passerRatingLabel.setForeground(sea.getTextColor());            
            playerLabel.setForeground(sea.getTextColor());
            textField.setForeground(sea.getTextColor());
         } else if (teamName.equals(stl.getName())) {
            backgroundPanel.setBackground(stl.getColor());
            teamLabel.setForeground(stl.getTextColor());
            playerLabel.setForeground(stl.getTextColor());
            completionLabel.setForeground(stl.getTextColor());
            attemptLabel.setForeground(stl.getTextColor());
            yardLabel.setForeground(stl.getTextColor());
            touchdownLabel.setForeground(stl.getTextColor());
            interceptionLabel.setForeground(stl.getTextColor());
            passerRatingLabel.setForeground(stl.getTextColor());            
            playerLabel.setForeground(stl.getTextColor());
            textField.setForeground(stl.getTextColor());
        } else if (teamName.equals(tb.getName())) {
            backgroundPanel.setBackground(tb.getColor());
            teamLabel.setForeground(tb.getTextColor());
            playerLabel.setForeground(tb.getTextColor());
            completionLabel.setForeground(tb.getTextColor());
            attemptLabel.setForeground(tb.getTextColor());
            yardLabel.setForeground(tb.getTextColor());
            touchdownLabel.setForeground(tb.getTextColor());
            interceptionLabel.setForeground(tb.getTextColor());
            passerRatingLabel.setForeground(tb.getTextColor());            
            playerLabel.setForeground(tb.getTextColor());
            textField.setForeground(tb.getTextColor());
        } else if (teamName.equals(ten.getName())) {
            backgroundPanel.setBackground(ten.getColor());
            teamLabel.setForeground(ten.getTextColor());
            playerLabel.setForeground(ten.getTextColor());
            completionLabel.setForeground(ten.getTextColor());
            attemptLabel.setForeground(ten.getTextColor());
            yardLabel.setForeground(ten.getTextColor());
            touchdownLabel.setForeground(ten.getTextColor());
            interceptionLabel.setForeground(ten.getTextColor());
            passerRatingLabel.setForeground(ten.getTextColor());            
            playerLabel.setForeground(ten.getTextColor());
            textField.setForeground(ten.getTextColor());
           } else if (teamName.equals(was.getName())) {
            backgroundPanel.setBackground(was.getColor());
            teamLabel.setForeground(was.getTextColor());
            playerLabel.setForeground(was.getTextColor());
            completionLabel.setForeground(was.getTextColor());
            attemptLabel.setForeground(was.getTextColor());
            yardLabel.setForeground(was.getTextColor());
            touchdownLabel.setForeground(was.getTextColor());
            interceptionLabel.setForeground(was.getTextColor());
            passerRatingLabel.setForeground(was.getTextColor());            
            playerLabel.setForeground(was.getTextColor());
            textField.setForeground(was.getTextColor());
         } else {
            backgroundPanel.setBackground(Color.white);
            teamLabel.setForeground(Color.black);
            playerLabel.setForeground(Color.black);
            completionLabel.setForeground(Color.black);
            attemptLabel.setForeground(Color.black);
            yardLabel.setForeground(Color.black);
            touchdownLabel.setForeground(Color.black);
            interceptionLabel.setForeground(Color.black);
            passerRatingLabel.setForeground(Color.black);            
            playerLabel.setForeground(Color.black);
            textField.setForeground(Color.black);
        }
    }//GEN-LAST:event_teamComboBoxActionPerformed
    protected static ImageIcon createImageIcon(String path) {
        java.net.URL imgURL = PasserRatingGUI.class.getResource(path);
        if (imgURL != null) {
            return new ImageIcon(imgURL);
        } else {
            JOptionPane.showMessageDialog(JFrame, "File Not Found", "Error", JOptionPane.ERROR_MESSAGE);
            return null;
        }
    }
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PasserRatingGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PasserRatingGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PasserRatingGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PasserRatingGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PasserRatingGUI().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel attemptLabel;
    private javax.swing.JTextField attemptTextField;
    private javax.swing.JPanel backgroundPanel;
    private javax.swing.JLabel completionLabel;
    private javax.swing.JTextField completionTextField;
    private javax.swing.JButton convertButton;
    private javax.swing.JLabel interceptionLabel;
    private javax.swing.JTextField interceptionTextField;
    private javax.swing.JFormattedTextField passerRatingFormattedTextField;
    private javax.swing.JLabel passerRatingLabel;
    private javax.swing.JLabel pictureLabel;
    private javax.swing.JLabel playerLabel;
    private javax.swing.JTextField playerTextField;
    private javax.swing.JComboBox teamComboBox;
    Teams az = new Teams("Arizona Cardinals", new java.awt.Color(176,5,57), new java.awt.Color(0,0,0));
    Teams atl = new Teams("Atlanta Falcons", new java.awt.Color(201, 35,63), new java.awt.Color(0,0,0));
    Teams bal = new Teams("Baltimore Ravens", new java.awt.Color(36,18,92), new java.awt.Color(228,178,12));
    Teams buf = new Teams("Buffalo Bills", new java.awt.Color(255,255,255), new java.awt.Color(4,50,132));
    Teams car = new Teams("Carolina Panthers", new java.awt.Color(0,0,0), new java.awt.Color(4,152,215));
    Teams chi = new Teams("Chicago Bears", new java.awt.Color(0,20,44), new java.awt.Color(223,97,8));
    Teams cin = new Teams("Cincinnati Bengals", new java.awt.Color(255,255,255), new java.awt.Color(242,78,37));
    Teams cle = new Teams("Cleveland Browns", new java.awt.Color(57,16,0), new java.awt.Color(236,86,20));
    Teams dal = new Teams("Dallas Cowboys", new java.awt.Color(194,194,198), new java.awt.Color(13,37,76));
    Teams den = new Teams("Denver Broncos", new java.awt.Color(248,77,4), new java.awt.Color(12,34,68));
    Teams det = new Teams("Detroit Lions", new java.awt.Color(0,109,176), new java.awt.Color(165,172,175));
    Teams gb = new Teams("Green Bay Packers", new java.awt.Color(49,63,54), new java.awt.Color(252,207,0));
    Teams hou = new Teams("Houston Texans", new java.awt.Color(0,20,63), new java.awt.Color(201,36,63));
    Teams ind = new Teams("Indianapolis Colts", new java.awt.Color(255,255,255), new java.awt.Color(4,58,116));
    Teams jax = new Teams("Jacksonville Jaguars", new java.awt.Color(0,0,0), new java.awt.Color(0,103,121));
    Teams kc = new Teams("Kansas City Chiefs", new java.awt.Color(178,0,50), new java.awt.Color(242,200,0));
    Teams mia = new Teams("Miami Dolphins", new java.awt.Color(0,140,149), new java.awt.Color(255,130,0));
    Teams min = new Teams("Minnesota Vikings", new java.awt.Color(88,44,131), new java.awt.Color(255,199,44));
    Teams ne = new Teams("New England Patriots", new java.awt.Color(12,34,68), new java.awt.Color(220,221,221));
    Teams no = new Teams("New Orleans Saints", new java.awt.Color(0,0,0), new java.awt.Color(201,176,116));
    Teams nyg = new Teams("New York Giants", new java.awt.Color(25,46,108), new java.awt.Color(175,3,52));
    Teams nyj = new Teams("New York Jets", new java.awt.Color(255,255,255), new java.awt.Color(28,50,44));
    Teams oak = new Teams("Oakland Raiders", new java.awt.Color(196,202,204), new java.awt.Color(0,0,0));
    Teams phi = new Teams("Philadelphia Eagles", new java.awt.Color(0,70,79), new java.awt.Color(0,0,0));
    Teams pit = new Teams("Pittsburgh Steelers", new java.awt.Color(0,0,0), new java.awt.Color(252,186,28));
    Teams sd = new Teams("San Diego Chargers", new java.awt.Color(255,255,255), new java.awt.Color(0,23,60));
    Teams sf = new Teams("San Francisco 49ers", new java.awt.Color(188,160,93), new java.awt.Color(196,3,30));
    Teams sea = new Teams("Seattle Seahawks", new java.awt.Color(12,34,68), new java.awt.Color(125,91,36));
    Teams stl = new Teams("St. Louis Rams", new java.awt.Color(13,37,76), new java.awt.Color(201,176,116));
    Teams tb = new Teams("Tampa Bay Buccaneers", new java.awt.Color(107,98,48), new java.awt.Color(214,10,11));
    Teams ten = new Teams("Tennessee Titans", new java.awt.Color(255,255,255), new java.awt.Color(100,143,204));
    Teams was = new Teams("Washington Redskins", new java.awt.Color(87,32,46), new java.awt.Color(241,197,0));
    private javax.swing.JLabel teamLabel;
    private javax.swing.JLabel textField;
    private javax.swing.JLabel touchdownLabel;
    private javax.swing.JTextField touchdownTextField;
    private javax.swing.JLabel yardLabel;
    private javax.swing.JTextField yardTextField;
    // End of variables declaration//GEN-END:variables
}

